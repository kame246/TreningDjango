"""
Django settings for TreningDjango project.

Generated by 'django-admin startproject' using Django 4.2.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-m@ej)$m43*ten!p$19e##2b(08hh8025i!&k!0g79!-7(9(1#)'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True
# Po wdrożeniu na serwer będzie trzeba ustawić DEBUG na False, aby nasze wewnętrzne szczegóły tj. nazwy plików nie były widoczne dla użytkowników podczas pokazywanie błędów na serwerze, w treści wyjątków itp.

ALLOWED_HOSTS = []
# Tylko requesty wysyłane na domeny zawarte w tej liście będą obsługiwane przez Django. Na jednej maszynie można mieć różne serwery

# Application definition

INSTALLED_APPS = [
    'account',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'preassures.apps.PreassuresConfig',
    'main',
    'survey',
    # 'survey.apps.SurveyConfig',
    # 'news', # Piewrszy sposób
    'news.apps.NewsConfig' # Drugi sposób
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'TreningDjango.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [ BASE_DIR / 'templates/' ],
        'APP_DIRS': True, # Dzięki temu Django szuka szablonów w katalogu 'templates' każdej aplikacji
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'TreningDjango.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3', # To dzięki temu powstał plik db.sqlite3
    }
    # 'default': {
    #     'ENGINE': 'django.db.backends.mysql',
    #     'NAME': 'django', # mysql> CREATE DATABASE django;
    #     'USER': 'root',
    #     'PASSWORD': 'izyda1'
    # }
    # Może być tylko jedna baza 'default' oraz zero lub więcej o innych nazwach
    # W materiałach *.pdf znajdziecie informacje o tym jak odczytywać/zapisywać do/z konkrenej bazy
}


# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

STATIC_URL = 'static/'

# Django będzie również uwzględniać następujące ścieżki w poszukiwaniu
# plików statycznych - nie tylko te w folderach aplikacji
STATICFILES_DIRS = [
    BASE_DIR / 'static/',
]

# Tutaj można skopiować pliki statyczne za pomocą komendy
# python manage.py collectstatic, aby były dostępne dla front serwera tj. NGIX, Apache,
# które szybko serwują statyczną treść, a Django powinien serwować tylko dynamiczną.
#STATIC_ROOT = BASE_DIR / 'pliki_statyczne/'
# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

LOGIN_REDIRECT_URL = 'main:hello' # Przekieruj do tej strony po udanym zalogowaniu
LOGIN_URL = 'login' # Niech Django weźmie te strone z account/urls.py, jeśli chce pokazać formularz logowania

EMAIL_BACKEND = 'django.core.mail.backends.filebased.EmailBackend'
EMAIL_FILE_PATH = BASE_DIR / 'email_base'